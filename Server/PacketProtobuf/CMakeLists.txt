CMAKE_MINIMUM_REQUIRED (VERSION 3.4)

SET(PROJECT_NAME ${PROTOBUF_PROJECT_NAME})
PROJECT(${PROJECT_NAME})

SET(PROJECT_ROOT_DIR ${PROTOBUF_ROOT_DIR})
SET(HEADER_FILES "")
SET(SRC_FILES "")

SET(PROTOBUF_LIB_ROOT_DIR ${PROJECT_ROOT_DIR}/protobuf/google/protobuf)

FILE(GLOB HEADER_FILES
${PROJECT_ROOT_DIR}/${HEADER_DIR}/*.h
${PROJECT_ROOT_DIR}/${PCH_HEADER}
${PROTOBUF_AUTOGEN_DIR}/*.h
${PROTOBUF_PROTO_DIR}/enum/*.h
${PROTOBUF_PROTO_DIR}/etc/*.h
${PROTOBUF_PROTO_DIR}/struct/*.h
${PROTOBUF_ROOT_DIR}/protobuf/config.h
${PROTOBUF_LIB_ROOT_DIR}/*.h
${PROTOBUF_LIB_ROOT_DIR}/compiler/*.h
${PROTOBUF_LIB_ROOT_DIR}/compiler/cpp/*.h
${PROTOBUF_LIB_ROOT_DIR}/compiler/java/*.h
${PROTOBUF_LIB_ROOT_DIR}/compiler/python/*.h
${PROTOBUF_LIB_ROOT_DIR}/io/*.h
${PROTOBUF_LIB_ROOT_DIR}/stubs/*.h
)

FILE(GLOB SRC_FILES
${PROJECT_ROOT_DIR}/${SRC_DIR}/*.cpp
${PROJECT_ROOT_DIR}/${PCH_SRC}
${PROTOBUF_PROTO_DIR}/enum/*.cc
${PROTOBUF_PROTO_DIR}/etc/*.cc
${PROTOBUF_PROTO_DIR}/struct/*.cc
)

FILE(GLOB PROTOBUF_LIB_SRC_FILES
${PROTOBUF_LIB_ROOT_DIR}/*.cc
${PROTOBUF_LIB_ROOT_DIR}/compiler/*.cc
${PROTOBUF_LIB_ROOT_DIR}/compiler/cpp/*.cc
${PROTOBUF_LIB_ROOT_DIR}/compiler/java/*.cc
${PROTOBUF_LIB_ROOT_DIR}/compiler/python/*.cc
${PROTOBUF_LIB_ROOT_DIR}/io/*.cc
${PROTOBUF_LIB_ROOT_DIR}/stubs/*.cc
)

FILE(GLOB PROTO_SRC_FILES
${PROTOBUF_PROTO_DIR}/enum/*.cc
${PROTOBUF_PROTO_DIR}/etc/*.cc
${PROTOBUF_PROTO_DIR}/struct/*.cc
)

LINK_DIRECTORIES(${PROTOBUF_ROOT_DIR}/lib/Protobuf)

ADD_LIBRARY(${PROJECT_NAME}
${HEADER_FILES}
${SRC_FILES}
${PROTOBUF_LIB_SRC_FILES}
${PROTOBUF_SRC_FILES}
)

MSVC_SET_PCH(${PROJECT_NAME}
${PCH_HEADER}
${PCH_SRC}
)

MSVC_EXCLUDE_PCH("${PROTO_SRC_FILES}")
MSVC_EXCLUDE_PCH("${PROTOBUF_LIB_SRC_FILES}")

INCLUDE_DIRECTORIES(${PCH_DIR})
INCLUDE_DIRECTORIES(${HEADER_DIR})
INCLUDE_DIRECTORIES(${PROTOBUF_ROOT_DIR}/protobuf)
INCLUDE_DIRECTORIES(${PROTOBUF_AUTOGEN_DIR})
INCLUDE_DIRECTORIES(${PROTOBUF_PROTO_DIR})

ADD_CUSTOM_COMMAND(TARGET ${PROJECT_NAME}
PRE_BUILD
COMMAND node prebuild.js
COMMAND node packet_info.js
WORKING_DIRECTORY ${PROTOBUF_ROOT_DIR}/build_script
)

IF(UNIX)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} pthread)
	ADD_DEFINITIONS(-DHAVE_PTHREAD)
ENDIF()