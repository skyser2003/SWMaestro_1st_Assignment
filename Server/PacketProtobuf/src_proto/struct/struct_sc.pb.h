// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: struct/struct_sc.proto

#ifndef PROTOBUF_struct_2fstruct_5fsc_2eproto__INCLUDED
#define PROTOBUF_struct_2fstruct_5fsc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace PKS {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_struct_2fstruct_5fsc_2eproto();
void protobuf_AssignDesc_struct_2fstruct_5fsc_2eproto();
void protobuf_ShutdownFile_struct_2fstruct_5fsc_2eproto();

class SC_HIGH_SCORE_LIST;

// ===================================================================

class SC_HIGH_SCORE_LIST : public ::google::protobuf::Message {
 public:
  SC_HIGH_SCORE_LIST();
  virtual ~SC_HIGH_SCORE_LIST();

  SC_HIGH_SCORE_LIST(const SC_HIGH_SCORE_LIST& from);

  inline SC_HIGH_SCORE_LIST& operator=(const SC_HIGH_SCORE_LIST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HIGH_SCORE_LIST& default_instance();

  void Swap(SC_HIGH_SCORE_LIST* other);

  // implements Message ----------------------------------------------

  SC_HIGH_SCORE_LIST* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_HIGH_SCORE_LIST& from);
  void MergeFrom(const SC_HIGH_SCORE_LIST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string name = 1;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name(int index) const;
  inline ::std::string* mutable_name(int index);
  inline void set_name(int index, const ::std::string& value);
  inline void set_name(int index, const char* value);
  inline void set_name(int index, const char* value, size_t size);
  inline ::std::string* add_name();
  inline void add_name(const ::std::string& value);
  inline void add_name(const char* value);
  inline void add_name(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // repeated int32 score = 2;
  inline int score_size() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score(int index) const;
  inline void set_score(int index, ::google::protobuf::int32 value);
  inline void add_score(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_score();

  // @@protoc_insertion_point(class_scope:PKS.SC_HIGH_SCORE_LIST)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > score_;
  friend void  protobuf_AddDesc_struct_2fstruct_5fsc_2eproto();
  friend void protobuf_AssignDesc_struct_2fstruct_5fsc_2eproto();
  friend void protobuf_ShutdownFile_struct_2fstruct_5fsc_2eproto();

  void InitAsDefaultInstance();
  static SC_HIGH_SCORE_LIST* default_instance_;
};
// ===================================================================


// ===================================================================

// SC_HIGH_SCORE_LIST

// repeated string name = 1;
inline int SC_HIGH_SCORE_LIST::name_size() const {
  return name_.size();
}
inline void SC_HIGH_SCORE_LIST::clear_name() {
  name_.Clear();
}
inline const ::std::string& SC_HIGH_SCORE_LIST::name(int index) const {
  // @@protoc_insertion_point(field_get:PKS.SC_HIGH_SCORE_LIST.name)
  return name_.Get(index);
}
inline ::std::string* SC_HIGH_SCORE_LIST::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:PKS.SC_HIGH_SCORE_LIST.name)
  return name_.Mutable(index);
}
inline void SC_HIGH_SCORE_LIST::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PKS.SC_HIGH_SCORE_LIST.name)
  name_.Mutable(index)->assign(value);
}
inline void SC_HIGH_SCORE_LIST::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PKS.SC_HIGH_SCORE_LIST.name)
}
inline void SC_HIGH_SCORE_LIST::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PKS.SC_HIGH_SCORE_LIST.name)
}
inline ::std::string* SC_HIGH_SCORE_LIST::add_name() {
  return name_.Add();
}
inline void SC_HIGH_SCORE_LIST::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PKS.SC_HIGH_SCORE_LIST.name)
}
inline void SC_HIGH_SCORE_LIST::add_name(const char* value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PKS.SC_HIGH_SCORE_LIST.name)
}
inline void SC_HIGH_SCORE_LIST::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PKS.SC_HIGH_SCORE_LIST.name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SC_HIGH_SCORE_LIST::name() const {
  // @@protoc_insertion_point(field_list:PKS.SC_HIGH_SCORE_LIST.name)
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SC_HIGH_SCORE_LIST::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:PKS.SC_HIGH_SCORE_LIST.name)
  return &name_;
}

// repeated int32 score = 2;
inline int SC_HIGH_SCORE_LIST::score_size() const {
  return score_.size();
}
inline void SC_HIGH_SCORE_LIST::clear_score() {
  score_.Clear();
}
inline ::google::protobuf::int32 SC_HIGH_SCORE_LIST::score(int index) const {
  // @@protoc_insertion_point(field_get:PKS.SC_HIGH_SCORE_LIST.score)
  return score_.Get(index);
}
inline void SC_HIGH_SCORE_LIST::set_score(int index, ::google::protobuf::int32 value) {
  score_.Set(index, value);
  // @@protoc_insertion_point(field_set:PKS.SC_HIGH_SCORE_LIST.score)
}
inline void SC_HIGH_SCORE_LIST::add_score(::google::protobuf::int32 value) {
  score_.Add(value);
  // @@protoc_insertion_point(field_add:PKS.SC_HIGH_SCORE_LIST.score)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_HIGH_SCORE_LIST::score() const {
  // @@protoc_insertion_point(field_list:PKS.SC_HIGH_SCORE_LIST.score)
  return score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_HIGH_SCORE_LIST::mutable_score() {
  // @@protoc_insertion_point(field_mutable_list:PKS.SC_HIGH_SCORE_LIST.score)
  return &score_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PKS

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_struct_2fstruct_5fsc_2eproto__INCLUDED
